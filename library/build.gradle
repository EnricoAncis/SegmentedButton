apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    namespace 'com.addisonelliott.segmentedbutton'

    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 13
        versionName "3.1.10"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13-beta-3'

    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "androidx.core:core:1.10.1"
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation "androidx.interpolator:interpolator:1.0.0"

    api 'com.github.addisonElliott:RippleDrawable:3.0.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

configurations {
    javadocDeps {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom configurations.implementation
    }
}

task javadoc(type: Javadoc) {
    failOnError false
    source = files('src/main/java')
    classpath += files(android.getBootClasspath()) + configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.EnricoAncis'
                artifactId = 'SegmentedButton'
                version = '3.0.0-fixed34'

                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                artifact sourcesJar
                artifact javadocJar
            }
        }

        repositories {
            // Questo nome Ã¨ cruciale: serve per far funzionare il publish su JitPack
            maven {
                name = "jitpack"
                url = uri("file://${buildDir}/repo")
            }
        }
    }
}

tasks.whenTaskAdded {
    if (name == "publishReleasePublicationToJitpackRepository") {
        dependsOn("assembleRelease")
    }
}
